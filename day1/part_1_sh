#!/bin/bash

input_file=$1

echo "sum of last digits:"

cat "$input_file" | grep -o "[0-9][^0-9]*$" | grep "[0-9]" -o | awk '{s+=$1} END {printf "%.0f\n", s}'

echo "sum of first digits:"

cat "$input_file" | grep -o "^[^0-9]*[0-9]" | grep "[0-9]" -o | awk '{s+=$1} END {printf "%.0f\n", s}'

echo "part 2: pre-process file:"

processed_file="processed_data.txt"

rm $processed_file

cp "$input_file" "$processed_file"

word_patterns=( "one" "two" "three" "four" "five" "six" "seven" "eight" "nine" )

nums_values=( 1 2 3 4 5 6 7 8 9 )

for i in "${!word_patterns[@]}"; do
  #echo "$i - ${word_patterns[$i]}"
  #echo "$i - ${nums_values[$i]}"
  sed -i '' "s/${word_patterns[$i]}/${nums_values[$i]}/g" "$processed_file"
done

echo "part 2: processed file diffs"

diff "$input_file" "$processed_file"

echo "part 2: sum of last digits:"

cat "$processed_file" | grep -o "[0-9][^0-9]*$" | grep "[0-9]" -o | awk '{s+=$1} END {printf "%.0f\n", s}'

echo "part 2: sum of first digits:"

cat "$processed_file" | grep -o "^[^0-9]*[0-9]" | grep "[0-9]" -o | awk '{s+=$1} END {printf "%.0f\n", s}'
